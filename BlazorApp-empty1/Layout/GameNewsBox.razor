@inherits LayoutComponentBase
@using HtmlAgilityPack
@using System.Threading.Tasks
@using System.Net.Http
@using NewsAPI
@using NewsAPI.Models
@using NewsAPI.Constants


<div class="GameNewsBox">
    <main>
        <h1>Game News</h1>
    </main>

</div>

@code {
    //going to pull from: {websites}
    Uri pcGamer = new Uri("https://www.pcgamer.com");

    //maybe use NewsData.io
    // https://newsapi.org/ try this for news
    //api key 529ce4d0eeec406193a442f05d4e0d16
    Uri gameNews = new Uri("https://newsapi.org/v2/everything?q=VideoGame&sortBy=popularity&apiKey=529ce4d0eeec406193a442f05d4e0d16");
    // https://newsapi.org/v2/everything?q=Tech&sortBy=popularity&apiKey=529ce4d0eeec406193a442f05d4e0d16
    // https://newsapi.org/v2/everything?q=World&sortBy=popularity&apiKey=529ce4d0eeec406193a442f05d4e0d16

    protected override async Task OnInitializedAsync()
    {
        try
        {
            using (var client = new HttpClient())
            {
                //string page = await client.GetStringAsync(pcGamer); alternate way to do it? same error
                HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Get, gameNews);

                HttpResponseMessage response = await client.SendAsync(request); //<- pcGamer won't let me web scrape
                response.EnsureSuccessStatusCode();
                Console.WriteLine("Passed");
                string responseBody = await response.Content.ReadAsStringAsync();
            }

        }

         catch (HttpRequestException e)
         {
             Console.WriteLine("\nException Caught!");
             Console.WriteLine("Message: {0} ", e.Message);
         }

         catch (Exception e)
         {
             Console.WriteLine("\nAn unexpected error!");
             Console.WriteLine("Message: {0} ", e.Message);
         }

    }

    //https://www.scrapingbee.com/blog/web-scraping-csharp/
    private List<string> ParseSite(string html)
    {
        HtmlDocument htmlDoc = new HtmlDocument();
        htmlDoc.LoadHtml(html);

        List<string> siteStuff = new List<string>();
        return siteStuff;
    }

}